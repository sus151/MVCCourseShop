@model IEnumerable<CourseShop.Application.DTOs.GetCategoryDto>

<div class="row d-flex mt-2">
    @foreach (var mainCategory in Model)
    {
        <div class="col d-flex justify-content-center menu-btn-container">
            <a class="btn menu-btn fw-bold text-white fs-5 w-100 h-100" data-bs-toggle="collapse" data-bs-target="#collapse@(mainCategory.IdCategory)" data-href="@Url.Action("MainCatDetails", "Category", new { id = mainCategory.IdCategory })">
                @mainCategory.Name
            </a>
        </div>
    }
</div>

<div style="position: absolute; width:100%; z-index:10;" >
@foreach (var category in Model)
{
    <div class="row" style="margin-right:12px;">
        <div class="col bg-secondary">
            <div class="collapse menu-collapse" id="collapse@(category.IdCategory)">
                <div class="card-body container-fluid p-0">
                    <div class="row">
                        @foreach (var subcategory in category.SubCategories)
                        {
                            <div class="col d-flex flex-column align-items-center p-0">
                                <a class="fs-4 fw-bold text-white" style="cursor: pointer; text-decoration:none;" asp-action="SubCatDetails" asp-controller="Category" asp-route-id="@subcategory.IdCategory">@subcategory.Name</a>
                                
                                <div class="d-flex flex-column">
                                    @foreach (var course in @subcategory.Courses)
                                    {
                                        
                                            <a class="mb-1 text-white" style="cursor: pointer; text-decoration:none;" asp-action="Details" asp-controller="Course" asp-route-id="@course.IdCourse">@course.Name</a>
                                       
                                    }
                                </div>
                            </div>
                             
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
</div>


<script>
document.addEventListener('DOMContentLoaded', function () {
    var buttons = document.querySelectorAll('.menu-btn');
    var collapses = document.querySelectorAll('.menu-collapse');
    var delay = 500; // Set the delay time in milliseconds (adjust as needed)

    buttons.forEach(function (button) {
        var timeoutId;
        var targetId = button.getAttribute('data-bs-target');
        var parentDiv = button.closest('.menu-btn-container');

        button.addEventListener('click', function (event) {
            // Prevent the default collapse toggle behavior
            event.preventDefault();
            event.stopPropagation();

             // Here you can add the URL you want to navigate to
            var urlToNavigate = button.getAttribute('data-href'); // Assuming 'data-href' is the attribute with the URL
            window.location.href = urlToNavigate;
            });

        // Existing mouseover event
        button.addEventListener('mouseover', function () {
            clearTimeout(timeoutId);
            collapses.forEach(function (collapse) {
                if ('#' + collapse.id !== targetId) {
                    $(collapse).collapse('hide');
                }
            });
            timeoutId = setTimeout(function () {
                $(targetId).collapse('show');
            }, delay);
        });

        // Existing mouseout event
        button.addEventListener('mouseout', function (event) {
            if (!isMouseStillInside(event, button, targetId)) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(function () {
                    $(targetId).collapse('hide');
                }, delay);
            }
        });

        // Existing collapse mouseout event
        $(targetId).on('mouseout', function (event) {
            if (!isMouseStillInside(event, button, targetId)) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(function () {
                    $(targetId).collapse('hide');
                }, delay);
            }
        });

        // Added event listeners for maintaining the border on the parent div
        $(targetId).on('show.bs.collapse', function () {
            parentDiv.classList.add('active-border');
        });

        $(targetId).on('hide.bs.collapse', function () {
            parentDiv.classList.remove('active-border');
        });
    });

    // Helper function to check if the mouse is still inside the button or the collapse
    function isMouseStillInside(event, button, targetId) {
        return event.relatedTarget && (button.contains(event.relatedTarget) || $(targetId).has(event.relatedTarget).length > 0);
    }
});
</script>


<style>


.active-border {
    border-bottom: 3px solid black;
}
</style>


