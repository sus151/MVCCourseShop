@model CourseShop.Application.Course.Commands.EditCourse.EditCourseCommand
@{
    ViewData["Title"] = "Edit";
    Layout = "_AdminLayout";
    var index = 0;
}


<h1 class="text-center">Edycja kursu</h1>


<div class="form-container bg-secondary mb-5">
    <form asp-action="Edit" enctype="multipart/form-data" >
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="IdCourse" />
    
    <div class="form-group">
        <label>Main category</label>
        <select class="form-control" id="mainCategory">
            <option value="@Model.IdMainCategory">@Model.MainCategoryName</option>
            @foreach (var category in ViewBag.MainCategorySelect)
            {
                if (category.IdCategory!=@Model.IdMainCategory)
                {
                    <option value="@category.IdCategory">@category.Name</option>
                }
                        
            }
        </select>
    </div>
    
     <div class="form-group">
                <label asp-for="IdCategory">Category</label>
                <select class="form-control" asp-for="IdCategory" id="subCategory">
                    <option value="@Model.IdCategory">@Model.Category</option>
                    @foreach (var category in ViewBag.SubCategorySelect)
                    {
                        if (category.IdCategory!=@Model.IdCategory)
                        {
                            <option value="@category.IdCategory">@category.Name</option>
                        }
                        
                    }
                </select>
                <span asp-validation-for="IdCategory" class="text-danger"></span>
            </div>

            
            <div class="form-group">
                <label asp-for="IdDifficultyLevel">DifficultyLevel</label>
                <select class="form-control" asp-for="IdDifficultyLevel">
                    <option value="">Wybierz poziom</option>
                    @foreach (var difficultyLevel in ViewBag.DifficultyLevelsSelect)
                    {
                        <option value="@difficultyLevel.IdDifficultyLevel">@difficultyLevel.Difficulty</option>
                    }
                </select>
                <span asp-validation-for="IdDifficultyLevel" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
 
    <div class="form-group">
        <label asp-for="File">Course Picture</label>
        <input type="file" asp-for="File" class="form-control" />
        <span asp-validation-for="File" class="text-danger"></span>
    </div>
    
    <div class="d-flex my-3 justify-content-center">
        <a id="toggleStepsButton" class="a-details fs-4" style="cursor: pointer;">Pokaż kroki kursu</a>
    </div>
    <div id="stepsContainer" style="display: none;">
    
        @foreach (var step in Model.CourseSteps)
        {
            index+=1;
            <div class="my-3">
                <span><strong>Krok @index</strong></span>
                <div class="form-group">
                    <label>Nazwa</label>
                    <input disabled value="@step.Name" class="form-control dis-inp-bac" />
                </div>
                <div class="form-group">
                    <label>Opis</label>
                    <textarea disabled class="form-control dis-inp-bac">@step.Description</textarea>
                </div>
                <div class="d-flex justify-content-center">
                    <a href="#" onclick="deleteStep(@step.IdCourseStep); return false;" class="a-delete fs-4">Usuń</a>
                </div>
            </div>
        }
    </div>
    
    <div class="d-flex justify-content-center">
        <a class="a-details fs-4" asp-action="AddCourseSteps" asp-route-id="@Model.IdCourse">Dodaj kroki do kursu</a>
    </div>
    
    <div class="d-flex justify-content-between">
        <input type="submit" value="Edytuj" class="a-edit" style="height:40px;">
        <a class="a-edit d-flex align-items-center justify-content-center" asp-action="IndexAdmin" asp-Controller="Course">Lista kursów</a>
    </div>
    
    </form>
</div>





<script>
       document.addEventListener("DOMContentLoaded", function() {
    var mainCategorySelect = document.getElementById('mainCategory');
    var subCategorySelect = document.getElementById('subCategory');

    function fetchAndPopulateSubcategories(categoryId) {
        if (categoryId) {
            subCategorySelect.removeAttribute('disabled');
            fetch('@Url.Action("GetSubcategoriesByMainCategoryId", "Category")?id=' + categoryId)
                .then(response => response.json())
                .then(subcategories => {
                    subCategorySelect.innerHTML = '';

                    subcategories.forEach(function(subcategory) {
                        var option = document.createElement('option');
                        option.value = subcategory.idCategory;
                        option.textContent = subcategory.name;
                        subCategorySelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error:', error));
        } else {
            subCategorySelect.setAttribute('disabled', 'disabled');
            subCategorySelect.innerHTML = '<option value="">Wybierz podkategorię</option>';
        }
    }

    mainCategorySelect.addEventListener('change', function() {
        fetchAndPopulateSubcategories(this.value);
    });

    fetchAndPopulateSubcategories(mainCategorySelect.value);
});

document.getElementById('toggleStepsButton').addEventListener('click', function() {
    var container = document.getElementById('stepsContainer');
    var button = document.getElementById('toggleStepsButton');
    
    if (container.style.display === 'none') {
        container.style.display = 'block';
        button.textContent = 'Schowaj kroki kursu';
    } else {
        container.style.display = 'none';
        button.textContent = 'Pokaż kroki kursu';
    }
});

function deleteStep(id) {
    fetch('/CourseStep/Delete/' + id, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        }
    })
    .then(response => {
        if (response.ok) {
            // Odśwież stronę lub wykonaj inną akcję po pomyślnym usunięciu
            window.location.reload();
        }
    })
    .catch(error => console.error('Error:', error));
}
    </script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
